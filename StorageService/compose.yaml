services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      MEMCACHED_HOST: memcached
      MEMCACHED_PORT: 11211
    depends_on:
      db:
        condition: service_healthy
      memcached:
        condition: service_started
    networks:
      - app-network

  db:
    image: postgres:16.3
    shm_size: 1GB
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 768MB
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  memcached:
    image: memcached:alpine3.17  # Используем alpine-образ
    ports:
      - "11211:11211"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "11211"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Опциональные настройки для alpine
    command: ["-m", "64", "-vv"]  # 64MB памяти, verbose logging
    deploy:
      resources:
        limits:
          memory: 128M  # Лимит памяти для контейнера

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
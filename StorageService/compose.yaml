version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mydatabase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      IGNITE_CLUSTER_NAME: spring-ignite-cluster
      IGNITE_PEER_CLASS_LOADING_ENABLED: "true"
    depends_on:
      db:
        condition: service_healthy
      ignite:
        condition: service_started
    networks:
      - app-network

  db:
    image: postgres:16.3
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  ignite:
    image: apacheignite/ignite:2.16.0
    environment:
      - IGNITE_CLUSTER_NAME=spring-ignite-cluster
      - IGNITE_PEER_CLASS_LOADING_ENABLED=true # Жестко задаем параметр
      - IGNITE_NO_ASCII=false
      - IGNITE_QUIET=false
    ports:
      - "47500:47500"
      - "47100:47100"
    networks:
      - app-network
    command: >
      sh -c '
      echo "=== Starting Ignite with forced config ===";
      /opt/ignite/bin/ignite.sh -J-DIGNITE_PEER_CLASS_LOADING_ENABLED=true
      '

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
    driver: local